name: Build Docker Image (No Push)

on: 
  workflow_dispatch:
    inputs:
      project_path:
        description: '项目地址：docker build的当前路径'
        required: true
        default: 'llama_cpp'
      dockerfile_path:
        description: 'Dockerfile的路径;例如：bash.Dockerfile'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Build image locally
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ./${{ github.event.inputs.project_path }}               # 构建上下文路径
      #     file: ./${{ github.event.inputs.project_path }}/Dockerfile        # Dockerfile路径
      #     push: false               # 禁用推送
      #     platforms: "linux/amd64"
      #     tags: ${{ github.event.inputs.project_path }}:local      # 本地临时标签
          
      - name: Pull Docker Images and Package
        env: 
          cur_path: ${{ inputs.project_path }}
          dockerfile_path: ${{ inputs.dockerfile_path }}
          image_name: ${{ inputs.project_path }}
        run: |
            pwd
            ls
            cd ${cur_path}
            if [ -n "$dockerfile_path" ]; then
              docker build -t "${image_name}:local-amd64"  -f "$dockerfile_path"  .
            else
              docker build -t ${image_name}:local-amd64  .
            fi
            docker images -a
            docker save "${image_name}:local-amd64" -o "${image_name}-amd64.tar"
            gzip -c "${image_name}-amd64.tar" > "${image_name}-amd64.tar.gz"
            rm "${image_name}-amd64.tar"
            ls
            cp *.tar.gz ../

  
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: ${{ github.workspace }}/*.tar.gz
          retention-days: 1  # 将保留天数设置为 1 天 最多可设置90天
