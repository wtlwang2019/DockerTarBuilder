# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: ARM64 Pull and Publish Docker image

on:
  workflow_dispatch: # allows manual triggering
    inputs:
      dockerhub_tag:
        description: 'dockerhub的镜像id'
        required: true
        default: 'ubuntu:latest'  
      image_tag:
        description: 'Docker image的tag: project:version'
        required: true   
        default: 'llama_cpp:arm64'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

# Fine-grant permission
# https://docs.github.com/en/actions/security-for-github-actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
permissions:
  packages: write

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub

    runs-on: ${{ matrix.config.runs_on }}
    env:
      COMMIT_SHA: ${{ github.sha }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # Multi-stage build
          - { tag: "arm64",    dockerfile: ".devops/cpu.Dockerfile",    platforms: "linux/arm64", full: true,  free_disk_space: true, runs_on: "ubuntu-22.04-arm" }
          # - { tag: "cuda",   dockerfile: ".devops/cuda.Dockerfile",   platforms: "linux/amd64", full: true, light: true, server: true, free_disk_space: false, runs_on: "ubuntu-22.04" }
          # - { tag: "musa",   dockerfile: ".devops/musa.Dockerfile",   platforms: "linux/amd64", full: true, light: true, server: true, free_disk_space: true,  runs_on: "ubuntu-22.04" }
          # - { tag: "intel",  dockerfile: ".devops/intel.Dockerfile",  platforms: "linux/amd64", full: true, light: true, server: true, free_disk_space: true,  runs_on: "ubuntu-22.04" }
          # - { tag: "vulkan", dockerfile: ".devops/vulkan.Dockerfile", platforms: "linux/amd64", full: true, light: true, server: true, free_disk_space: false, runs_on: "ubuntu-22.04" }
          # - { tag: "s390x",  dockerfile: ".devops/s390x.Dockerfile",  platforms: "linux/s390x", full: true, light: true, server: true, free_disk_space: false, runs_on: "ubuntu-22.04-s390x" }
          # Note: the rocm images are failing due to a compiler error and are disabled until this is fixed to allow the workflow to complete
          #- {tag: "rocm", dockerfile: ".devops/rocm.Dockerfile", platforms: "linux/amd64,linux/arm64", full: true, light: true, server: true, free_disk_space: true }
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # preserve git history, so we can determine the build number

      # - name: Set up QEMU
      #   if: ${{ matrix.config.tag != 's390x' }}
      #   uses: docker/setup-qemu-action@v3
      #   with:
      #     image: tonistiigi/binfmt:qemu-v7.0.0-28

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine image tag name
        id: tag
        shell: bash
        run: |
          REPO_OWNER="${GITHUB_REPOSITORY_OWNER@L}"  # to lower case
          REPO_NAME="${{ github.event.repository.name }}"
          image_tag="${{ inputs.image_tag }}"
          df -h
          # list all tags possible
          if [[ "${{ matrix.config.tag }}" == "cpu" ]]; then
              TYPE=""
          else
              TYPE="-${{ matrix.config.tag }}"
          fi
          PREFIX="ghcr.io/${REPO_OWNER}/${REPO_NAME}:"
          FULLTAGS="ghcr.io/${REPO_OWNER}/${image_tag}"
          echo "full_output_tags=$FULLTAGS" >> $GITHUB_OUTPUT
          echo "full_output_tags=$FULLTAGS"  # print out for debugging

        env:
          GITHUB_REPOSITORY_OWNER: '${{ github.repository_owner }}'

      - name: Free Disk Space (Ubuntu)
        if: ${{ matrix.config.free_disk_space == true }}
        uses: ggml-org/free-disk-space@v1.3.1
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: pull dockerhub image
        id: pull
        shell: bash
        run: |
          dockerhub_tag="${{ inputs.dockerhub_tag }}"
          image_tag="${{ inputs.image_tag }}"
          dst_tag="ghcr.io/${GITHUB_REPOSITORY_OWNER}/${image_tag}"
          df -h
          docker pull "$dockerhub_tag"
          docker tag "$dockerhub_tag" "$dst_tag"
          docker push "${dst_tag}"
        env:
          GITHUB_REPOSITORY_OWNER: '${{ github.repository_owner }}'          

      # - name: Build and push Full Docker image
      #   if: ${{ (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && matrix.config.full == true }}
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     push: true
      #     platforms: ${{ matrix.config.platforms }}
      #     # tag list is generated from step above
      #     tags: ${{ steps.tag.outputs.full_output_tags }}
      #     file: ${{ inputs.dockerfile_path }}
      #     # target: full
      #     provenance: false
      #     build-args: |
      #       TARGETARCH=arm64          
      #     # using github experimental cache
      #     # cache-from: type=gha
      #     # cache-to: type=gha,mode=max
      #     # return to this if the experimental github cache is having issues
      #     # cache-to: type=local,dest=/tmp/.buildx-cache
      #     # cache-from: type=local,src=/tmp/.buildx-cache
