name: ARM64-Search-Image-tags

on:
  workflow_dispatch:
    inputs:  
      docker_images:
        description: '请填写docker镜像名称,多个用英文逗号分开'
        required: true
        default: 'alpine,yusiwen/llama.cpp,busybox'

jobs:
  search_and_package:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Search DockerHub Images tags
        run: |
          df -h
          cd arm64
          images="${{ inputs.docker_images }}"

          IFS=',' read -r -a image_array <<< "$images"
          success=false
          for image in "${image_array[@]}"; do
            if python get_arm64_image_tags.py  "${image}" ; then
              echo "Downloaded tags for $image"
              success=true
            else
              echo "Failed to fetch tags for $image" >&2
            fi
          done
          if ! $success; then
            echo "No tags files were downloaded. Exiting." >&2
            exit 2
          fi
          ls -l

          # python get_arm64_image_tags.py
          # tar -czvf tags.tar.gz *.txt *.json
          rm *.txt || echo 0
          cp *.json ../

      - name: List generated files (debug step)
        run: |
          echo "Preparing docker images json (.json) files:"
          find $GITHUB_WORKSPACE -name "*.json"
          release_name=$(TZ="Asia/Shanghai" date +'%Y-%m-%d %H:%M Build')
          echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@master
        with:
          tag_name: DockerTarBuilder-ARM64
          name: ${{ env.RELEASE_NAME }} for arm64
          body: |
            [![Github](https://img.shields.io/badge/RELEASE:DockerTarBuilder-123456?logo=github&logoColor=fff&labelColor=green&style=for-the-badge)](https://www.bilibili.com/video/BV1EZ421M7mL) [![Github](https://img.shields.io/badge/国内加速站下载-FC7C0D?logo=github&logoColor=fff&labelColor=000&style=for-the-badge)](https://wkdaily.cpolar.top/archives/1)
            ### How to use? For example
            `docker load -i alpine_latest.tar.gz `
            ### Video teaching
            [![Bilibili](https://img.shields.io/badge/Bilibili-123456?logo=bilibili&logoColor=fff&labelColor=fb7299)](https://www.bilibili.com/video/BV1yyq6YREdF)
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload DockerHub images.search.gz as release assets
        uses: softprops/action-gh-release@v2.1.0
        with:
          tag_name: DockerTarBuilder-ARM64
          files: ${{ github.workspace }}/*.json
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
